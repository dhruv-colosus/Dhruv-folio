{"version":3,"file":"index.umd.js","sources":["../src/context.ts","../src/hooks/useCore/useAxis.ts","../src/hooks/useCore/useSize.ts","../src/components/Core/Wrap.tsx","../src/components/Core/index.tsx","../src/hooks/useCore/index.ts","../src/hooks/useCore/useWindowSize.ts","../src/hooks/useCore/useSpringScroll.ts","../src/hooks/useScrollerMotion.ts"],"sourcesContent":["import { createContext } from 'react'\n\nimport { ScrollerMotionValues } from './types'\n\nexport const Context = createContext<ScrollerMotionValues | undefined>(\n  undefined\n)\n","import { useMemo } from 'react'\nimport { transform, useTransform } from 'framer-motion'\n\nimport { MotionValue } from '../../types'\n\ninterface Options {\n  axisSpring: MotionValue\n  scale: number\n  refSize: number\n  windowSize: number\n}\n\nexport const useAxis = ({\n  axisSpring,\n  scale,\n  refSize,\n  windowSize\n}: Options) => {\n  const scaledSize = useMemo(\n    () => (refSize > windowSize ? refSize * scale : refSize),\n    [refSize, scale, windowSize]\n  )\n\n  const transformFrom = useMemo(\n    () => [0, scaledSize - windowSize],\n    [scaledSize, windowSize]\n  )\n  const transformTo = useMemo(\n    () => [0, (refSize - windowSize) * -1],\n    [refSize, windowSize]\n  )\n\n  const axis = useTransform(axisSpring, transformFrom, transformTo, {\n    clamp: false\n  })\n\n  const progress = useTransform(axisSpring, (v) =>\n    Math.max(0, Math.min(transform(v, transformFrom, [0, 1]), 1))\n  )\n\n  return {\n    axis,\n    progress,\n    size: scaledSize\n  }\n}\n","import { useEffect, useState } from 'react'\nimport debounceFn from 'debounce-fn'\n\nimport { ChildrenRef } from '../../types'\n\nconst getSize = (el: HTMLElement | null) => ({\n  height: el?.scrollHeight ?? 0,\n  width: el?.scrollWidth ?? 0\n})\n\nconst supportsResizeObserver = typeof ResizeObserver === 'function'\n\nexport const useSize = (ref: ChildrenRef) => {\n  const [size, setSize] = useState({ height: 0, width: 0 })\n\n  useEffect(() => {\n    const onResize = () => setSize(getSize(ref.current))\n    const debouncedOnResize = debounceFn(onResize, { wait: 400 })\n    let resizeObserver: ResizeObserver | null = null\n\n    if (ref.current) {\n      onResize()\n      window.addEventListener('resize', debouncedOnResize)\n\n      if (supportsResizeObserver) {\n        resizeObserver = new ResizeObserver(onResize)\n        resizeObserver.observe(ref.current)\n      }\n    }\n\n    return () => {\n      window.removeEventListener('resize', debouncedOnResize)\n\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n      }\n    }\n  }, [])\n\n  return size\n}\n","import { useMemo } from 'react'\nimport { motion } from 'framer-motion'\n\nimport { ChildrenRef, DivElementProps, MotionValue } from '../../types'\n\ninterface Props extends DivElementProps {\n  childrenRef: ChildrenRef\n  disabled?: boolean\n  height: number\n  width: number\n  x: MotionValue\n  y: MotionValue\n}\n\nconst FIXED_STYLE = {\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0\n}\n\nexport const Wrap = ({\n  children,\n  childrenRef,\n  disabled,\n  height,\n  style,\n  width,\n  x,\n  y,\n  ...props\n}: Props) => {\n  const outerStyle = useMemo(\n    () => ({ ...style, ...(!disabled ? { height, width } : {}) }),\n    [disabled, height, style, width]\n  )\n  const fixedStyle = useMemo(() => (!disabled ? FIXED_STYLE : {}), [disabled])\n  const motionStyle = useMemo(\n    () => ({ x: !disabled ? x : 0, y: !disabled ? y : 0 }),\n    [disabled, x, y]\n  )\n\n  return (\n    <div {...props} style={outerStyle}>\n      <div style={fixedStyle}>\n        <motion.div style={motionStyle} ref={childrenRef}>\n          {children}\n        </motion.div>\n      </div>\n    </div>\n  )\n}\n","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react'\n\nimport { Context } from '../../context'\nimport { useCore } from '../../hooks'\nimport { CoreProps, CoreRef } from '../../types'\n\nimport { Wrap } from './Wrap'\n\nconst DEFAULT_SCALE = 1\n\nconst DEFAULT_SPRING = {\n  damping: 50,\n  mass: 1.25,\n  stiffness: 200\n}\n\nexport const Core = forwardRef<CoreRef, CoreProps>(\n  (\n    {\n      children,\n      disabled,\n      scale = DEFAULT_SCALE,\n      spring = DEFAULT_SPRING,\n      ...props\n    },\n    ref\n  ) => {\n    const childrenRef = useRef(null)\n\n    const {\n      height,\n      width,\n      scrollX,\n      scrollXProgress,\n      scrollY,\n      scrollYProgress,\n      x,\n      y\n    } = useCore({\n      ref: childrenRef,\n      scale,\n      spring\n    })\n\n    useImperativeHandle(\n      ref,\n      () => ({ scrollX, scrollXProgress, scrollY, scrollYProgress, x, y }),\n      [scrollX, scrollXProgress, scrollY, scrollYProgress, x, y]\n    )\n\n    const contextValue = useMemo(\n      () => ({ scrollX, scrollXProgress, scrollY, scrollYProgress, x, y }),\n      [scrollX, scrollXProgress, scrollY, scrollYProgress, x, y]\n    )\n\n    return (\n      <Wrap\n        {...props}\n        childrenRef={childrenRef}\n        disabled={disabled}\n        height={height}\n        width={width}\n        x={x}\n        y={y}\n      >\n        <Context.Provider value={contextValue}>{children}</Context.Provider>\n      </Wrap>\n    )\n  }\n)\n\nCore.displayName = 'ScrollerMotion'\n","import { useMemo } from 'react'\n\nimport { ChildrenRef, SpringProp } from '../../types'\n\nimport { useAxis } from './useAxis'\nimport { useSize } from './useSize'\nimport { useSpringScroll } from './useSpringScroll'\nimport { useWindowSize } from './useWindowSize'\n\ninterface Options {\n  ref: ChildrenRef\n  scale: number\n  spring: SpringProp\n}\n\nexport const useCore = ({ ref, scale, spring }: Options) => {\n  const innerScale = useMemo(() => Math.max(1, scale), [scale])\n\n  const { height: windowHeight, width: windowWidth } = useWindowSize()\n  const { height: refHeight, width: refWidth } = useSize(ref)\n\n  const { x: springX, y: springY } = useSpringScroll(spring)\n\n  const {\n    axis: x,\n    progress: progressX,\n    size: width\n  } = useAxis({\n    axisSpring: springX,\n    scale: innerScale,\n    refSize: refWidth,\n    windowSize: windowWidth\n  })\n\n  const {\n    axis: y,\n    progress: progressY,\n    size: height\n  } = useAxis({\n    axisSpring: springY,\n    scale: innerScale,\n    refSize: refHeight,\n    windowSize: windowHeight\n  })\n\n  return {\n    height,\n    width,\n    scrollX: springX,\n    scrollXProgress: progressX,\n    scrollY: springY,\n    scrollYProgress: progressY,\n    x,\n    y\n  }\n}\n","import { useEffect, useState } from 'react'\n\nconst getWindowSize = () => ({\n  width:\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth,\n  height:\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    document.body.clientHeight\n})\n\nexport const useWindowSize = () => {\n  const [size, setSize] = useState({ height: 0, width: 0 })\n\n  useEffect(() => {\n    const onResize = () => setSize(getWindowSize())\n\n    onResize()\n    window.addEventListener('resize', onResize, false)\n\n    return () => window.removeEventListener('resize', onResize, false)\n  }, [])\n\n  return size\n}\n","import { useScroll, useSpring } from 'framer-motion'\n\nimport { MotionValue, SpringProp, SpringOptions } from '../../types'\n\nexport const useSpringScroll = (springConfig: SpringProp) => {\n  const { scrollX, scrollY } = useScroll()\n\n  const config = typeof springConfig === 'object' ? springConfig : undefined\n  const springX: MotionValue<number> = useSpring(\n    scrollX,\n    config as SpringOptions\n  )\n  const springY: MotionValue<number> = useSpring(\n    scrollY,\n    config as SpringOptions\n  )\n\n  return {\n    x: config ? springX : scrollX,\n    y: config ? springY : scrollY\n  }\n}\n","import { useContext } from 'react'\n\nimport { Context } from '../context'\n\nexport const useScrollerMotion = () => {\n  const context = useContext(Context)\n\n  if (context === undefined) {\n    throw new Error('useScrollerMotion must be used within ScrollerMotion')\n  }\n\n  return context\n}\n"],"names":["Context","createContext","undefined","useAxis","axisSpring","scale","_ref","refSize","windowSize","scaledSize","useMemo","transformTo","axis","useTransform","transformFrom","clamp","progress","v","max","Math","min","transform","size","supportsResizeObserver","ResizeObserver","FIXED_STYLE","position","left","top","right","bottom","Wrap","children","childrenRef","disabled","height","style","width","x","y","props","outerStyle","_extends","fixedStyle","motionStyle","_jsx","motion","div","ref","DEFAULT_SPRING","damping","mass","stiffness","Core","forwardRef","DEFAULT_SCALE","spring","_ref$spring","_objectWithoutPropertiesLoose","_excluded","useRef","_useCore","_useState","setSize","innerScale","useWindowSize","useState","useEffect","onResize","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","addEventListener","removeEventListener","windowHeight","windowWidth","_useWindowSize","_el$scrollHeight","el","current","scrollHeight","_el$scrollWidth","scrollWidth","debouncedOnResize","debounceFn","wait","resizeObserver","observe","disconnect","useSize","refHeight","refWidth","useSpringScroll","springConfig","useScroll","scrollX","scrollY","config","useSpring","springX","springY","progressX","_useAxis","scrollXProgress","scrollYProgress","_useAxis2","useCore","useImperativeHandle","contextValue","Provider","value","displayName","context","useContext"],"mappings":"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"}